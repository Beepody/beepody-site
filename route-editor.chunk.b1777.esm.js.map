{"version":3,"sources":["webpack:///./routes/editor/index.tsx"],"names":["CodeEditor","props","ref","createRef","code","setCode","useState","class","onInput","sequence","parseSequence","setSequence","BeepEditor","BeepSequence","status","setStatus","toGRUBInitTune","parseGRUBInitTune","toBeepCommand","parseBeepCommand","type","beeps","length","lengthInSeconds"],"mappings":"6FAAA,uEAeA,MAAMA,EAAoDC,IACxD,MAAMC,EAAMC,uBACLC,EAAMC,GAAWC,YAASL,EAAMG,MAOvC,OACE,mBAAKF,IAAKA,GACR,wBAAUK,MAAM,yBAAyBC,QARzB,KAClBH,EAAQD,GACR,MAAMK,EAAWR,EAAMS,cAAcN,GACrCH,EAAMU,YAAYF,KAKgDL,KAwCvDQ,UAnCyB,KACtC,MAAMV,EAAMC,uBACLM,EAAUE,GAAeL,YAAS,IAAIO,eAAa,MACnDC,EAAQC,GAAaT,YAAS,cAErC,OACE,uBAASC,MAAM,iBAAiBL,IAAKA,GACnC,YAAC,IAAD,KAAQ,yCAER,qCAEA,wCACA,YAACF,EAAD,CAAYI,KAAMK,EAASO,iBAAkBN,cAAeO,oBAAmBN,YAAaA,EAAaI,UAAWA,IAEpH,sCACA,YAACf,EAAD,CAAYI,KAAMK,EAASS,gBAAiBR,cAAeS,mBAAkBR,YAAaA,EAAaI,UAAWA,IAElH,sBAAQK,KAAK,SAASb,MAAM,6BAA5B,QAEA,gCACA,qBAAIO,GAEJ,iCACA,sBACE,gCACUL,EAASY,MAAMC,QAEzB,oCACcb,EAASc,kBADvB","file":"route-editor.chunk.b1777.esm.js","sourcesContent":["import { parseBeepCommand, parseGRUBInitTune } from 'beepody/dist/tsc/beepody'\nimport { BeepSequence } from 'beepody/dist/tsc/main'\nimport { createRef, FunctionalComponent, h } from 'preact'\nimport { useState } from 'preact/hooks'\nimport Helmet from 'react-helmet'\n\ntype ParseSequenceFunction = (sequence: string) => BeepSequence\ntype SetSequenceFunction = (sequence: BeepSequence) => void\n\ninterface CodeEditorProps {\n  code: string;\n  parseSequence: ParseSequenceFunction;\n  setSequence: SetSequenceFunction;\n}\n\nconst CodeEditor: FunctionalComponent<CodeEditorProps> = (props: CodeEditorProps) => {\n  const ref = createRef()\n  const [code, setCode] = useState(props.code)\n  const handleInput = (): void => {\n    setCode(code)\n    const sequence = props.parseSequence(code)\n    props.setSequence(sequence)\n  }\n\n  return (\n    <div ref={ref}>\n      <textarea class=\"alert alert-dark w-100\" onInput={handleInput}>{code}</textarea>\n    </div>\n  )\n}\n\nconst BeepEditor: FunctionalComponent = () => {\n  const ref = createRef<HTMLElement>()\n  const [sequence, setSequence] = useState(new BeepSequence([]))\n  const [status, setStatus] = useState('Loading...')\n\n  return (\n    <section class=\"container py-5\" ref={ref}>\n      <Helmet><title>Beep Editor</title></Helmet>\n\n      <h1>Beep Editor</h1>\n\n      <h2>GRUB Init Tune</h2>\n      <CodeEditor code={sequence.toGRUBInitTune()} parseSequence={parseGRUBInitTune} setSequence={setSequence} setStatus={setStatus} />\n      \n      <h2>Beep Command</h2>\n      <CodeEditor code={sequence.toBeepCommand()} parseSequence={parseBeepCommand} setSequence={setSequence} setStatus={setStatus} />\n\n      <button type=\"button\" class=\"btn btn-success float-end\">Play</button>\n\n      <h2>Status</h2>\n      <p>{status}</p>\n\n      <h2>Metrics</h2>\n      <ul>\n        <li>\n          Beeps: {sequence.beeps.length}\n        </li>\n        <li>\n          Play time: {sequence.lengthInSeconds()} seconds\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default BeepEditor\n"],"sourceRoot":""}